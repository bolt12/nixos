## gitsigns @git
Stage hunk                               | <leader>ghs
Undo stage hunk                          | <leader>ghu
Reset hunk                               | <leader>ghr
Preview hunk                             | <leader>ghp
Reset buffer                             | <leader>ghR
Blame current line                       | <leader>ghb
Next hunk                                | ]c
Previous hunk                            | [c
Hunk text object                         | ih
View git diff                            | <leader>gd

## telescope @fuzzy @fzf
Close                                    | <C-C>
Toggle selection                         | <Tab>
Open file in tab                         | <C-T>
Open file in split                       | <C-X>
Open file in vsplit                      | <C-V>
Scroll up in preview window              | <C-U>
Scroll down in preview window            | <C-D>
Send to quickfix list                    | <C-Q>
Send selected items to quickfix list     | <M-Q>
Find files                               | <leader>ff
Live grep                                | <leader>fg
Buffers                                  | <leader>fb
Help tags                                | <leader>fh
Find in files                            | <leader>fs
Find word                                | <leader>fw

## bujo @todo @notes
Open TODO notes                          | :Todo
Add item                                 | <C-b>a
Check item                               | <C-b>c
Delete item                              | <C-b>d

## Floaterm @terminal @floating
Toggle Floaterm                          | <A-S-d>
New Floaterm                             | <leader>fn
Next Floaterm                            | <leader>fj
Previous Floaterm                        | <leader>fk
Kill Floaterm                            | <leader>fx

## Hoogle @hoogle @haskell
Search cursos word                       | <leader>h
Hoogle Lookup                            | :Hoogle

## Tabular @align
Align any                                | :Tabularize /<regex>
Align =                                  | :Tabularize /=
Align ::                                 | :Tabularize /::
Align ->                                 | :Tabularize /->
Align |                                  | :Tabularize /|
Align ,                                  | :Tabularize /,

## Venn @diagrams
Draw diagrams                            | set ve=all -> <C-v> -> :VBox
Draw Circle                              | :Circle
Draw Ellipse                             | :Ellipse
Draw Rectangle                           | :Rectangle

## HighStr @highlight
Highlight text                           | :HSHighlight <integer> (note pressing <C-U> might be needed in visual mode)
Remove all highlights                    | :HSHighlight rm_all
Toggle highlight                         | :HSHighlight toggle <integer>

## Surround @parentheses @brackets @tags
Change from " to '                       | cs"'
Change from ' to <q>                     | cs'<q>
Change from <q> to "                     | cst"
Remove delimiters                        | ds<delimiter>
Add delimiters in word                   | ysiw<delimiter>
Wrap entire line in delimiter            | yss<delimiter>
Visual mode wrap                         | visual selection followed by S<delimiter>
Change tag                               | cst<tag>

## Silicon @screenshot @code
Generate image from current buffer       | :Silicon /path/to/output.png
Generate image and write to clipboard    | :Silicon /path/to/output.png --to-clipboard
Generate image from selection            | :'<,'>Silicon --from-stdin /path/to/output.png

## vim-airline @status @bar
Display airline status bar                 | :AirlineToggle
Display tab line                          | :AirlineTablineToggle
Toggle airline extensions                 | :AirlineExtensionsToggle

## vim-markdown @markdown
Toggle folding of markdown sections       | zf
Open link under cursor                    | gx
Preview markdown in browser               | :MarkdownPreview

## vim-pandoc-syntax @pandoc
Toggle pandoc syntax features             | :PandocToggle

## rainbow_parentheses-vim @parentheses
Toggle rainbow parentheses                | :RainbowParenthesesToggle
Toggle rainbow parentheses load for all files | :RainbowParenthesesLoadRound

## colorizer @color
Toggle color highlighting for hex codes and names | :ColorizerToggle

## vim-nix @nix
Format nix file                           | :NixFormat

## gruvbox-community @theme
Set gruvbox theme                         | :colorscheme gruvbox

## Shade-nvim @shade
Toggle shade for inactive windows         | :ShadeToggle

## vim-fugitive @git
Check git status                          | :Gstatus
Commit changes                            | :Gcommit
Push changes                              | :Gpush

## vim-haskellConcealPlus @haskell
Toggle Haskell Conceal Plus               | :HaskellConcealToggle

## barbar-nvim @buffers @tabs
Navigate to next buffer                   | :BufferNext
Navigate to previous buffer               | :BufferPrevious
Close buffer                              | :BufferClose

## zk-nvim @zk
Create new zk note                        | :ZkNew
Link to zk note                           | :ZkLink

## matchit-zip @matching
Switch between matching items             | %

## base16-vim @theme
Set base16 theme                          | :colorscheme base16-[theme name]

## popup-nvim @popup
Create new popup                          | :lua require('popup').create({options})

## plenary-nvim @lua
Run lua tests                             | :PlenaryTest

## nvim-web-devicons @icons
Enable devicons                           | :lua require'nvim-web-devicons'.setup()

## Haskell-Tools @haskell
Declaration of symbol                     | gD
Definition of symbol                      | gd
Hover                                     | K
Implementation                            | gi
Signature help                            | <C-k>
Add workspace folder                      | <leader>wa
Remove workspace folder                   | <leader>wr
List workspace folders                    | <leader>wl
Type definition                           | <leader>D
Rename                                    | <leader>rn
Code action (normal and visual mode)      | <leader>ca
References                                | gr
Format                                    | <leader>f
Run code lens                             | <leader>cl
Hoogle signature search                   | <leader>hs
Evaluate all code snippets                | <leader>ea
Toggle GHCi repl for current package      | <leader>rr
Toggle GHCi repl for current buffer       | <leader>rf
Quit GHCi repl                            | <leader>rq

## git messenger
Open popup                                                    | :Gitmessenger or <leader>gm
When inside the popup: Close window                           | q
When inside the popup: Go to older commit                     | o
When inside the popup: Go to newer commit                     | O
When inside the popup: toggle diff hunks inside the file      | d
When inside the popup: toggle all diff hunks of the commit    | D
When inside the popup: toggle word diff hunks in current file | r
When inside the popup: toggle all word diff hunks of commit   | R
When inside the popup: show help                              | ?

## Gitsigns
Next hunk                 | ]c
Previous hunk             | [c
Stage hunk                | <leader>ghs
Reset hunk                | <leader>ghr
Stage buffer              | <leader>ghS
Undo stage hunk           | <leader>ghu
Reset buffer              | <leader>ghR
Preview hunk              | <leader>ghp
Blame line                | <leader>ghb
Toggle current blame line | <leader>gtb
Diff this                 | <leader>ghd
Diff this ?               | <leader>ghD
Toggle deleted            | <leader>gtd

## Undotree
Help press ? in undnotree window | ?
Invoke undotree via telescope    | :Telescope undo

## Cornelis global commands

Load and type-check buffer                | :CornelisLoad
Show all goals                            | :CornelisGoals
Kill and restart the `agda` process       | :CornelisRestart
Abort running command                     | :CornelisAbort
Solve constraints                         | :CornelisSolve <RW>
Jump to definition of name at cursor      | :CornelisGoToDefinition
Jump to previous goal                     | :CornelisPrevGoal
Jump to next goal                         | :CornelisNextGoal
Expand `?`-holes to `{! !}`               | :CornelisQuestionToMeta
Increment including sub-/superscripts     | :CornelisInc
Decrement including sub-/superscripts     | :CornelisDec
Close all info windows                    | :CornelisCloseInfoWindows

#### Cornelis context commands

Fill goal with hole contents                    | :CornelisGive
Refine goal                                     | :CornelisRefine
Fill goal with normalized hole contents         | :CornelisElaborate <RW>
Automatic proof search                          | :CornelisAuto
Case split                                      | :CornelisMakeCase
Show goal type and context                      | :CornelisTypeContext <RW>
Show inferred type of hole contents             | :CornelisTypeInfer <RW>
Show goal type, context, and inferred type      | :CornelisTypeContextInfer <RW>
Compute normal form of hole contents            | :CornelisNormalize <CM>
Show why a given name is in scope               | :CornelisWhyInScope
Copy inferred type to register `"`              | :CornelisHelperFunc <RW>

### Cornelis CM and RW arguments

<RW> | AsIs, Instantiated, HeadNormal, Simplified, Normalised
<CM> | DefaultCompute, IgnoreAbstract, UseShowInstance, HeadCompute


## Git Advanced Search

## Search Log Content
Search through repository's commit logs              | :AdvancedGitSearch search_log_content
Open diff of current file with selected commit       | <CR>
Show entire commit with diff                         | <C-e>
Open commit in browser                               | <C-o>
Copy commit hash to clipboard                        | <C-y>
Toggle date and author in entry                      | <C-w>

## Search Log Content (File)
Search commit logs related to the current file       | :AdvancedGitSearch search_log_content_file
Open diff of current file with selected commit       | <CR>
Show entire commit with diff                         | <C-e>
Open commit in browser                               | <C-o>
Copy commit hash to clipboard                        | <C-y>
Toggle date and author in entry                      | <C-w>

## Diff Commit File
View differences between a file and its commit       | :AdvancedGitSearch diff_commit_file
Open diff of current file with selected commit       | <CR>
Show entire commit with diff                         | <C-e>
Open commit in browser                               | <C-o>
Copy commit hash to clipboard                        | <C-y>
Toggle date and author in entry                      | <C-w>

## Diff Commit Line
View differences for a specific line of code         | :AdvancedGitSearch diff_commit_line
Open diff for the selected commit                    | <CR>
Open commit in browser                               | <C-o>

## Diff Branch File
View differences between a file and a branch         | :AdvancedGitSearch diff_branch_file
Open diff for the selected branch                    | <CR>

## Checkout Reflog
Checkout from reflog entries                         | :AdvancedGitSearch checkout_reflog
Checkout selected reflog entry                       | <CR>

## Which-key

### Which-key Controls
Show Which-key Popup            | `<leader>?`
Toggle Which-key Display        | `<leader>wk`
Refresh Which-key Configuration | `<leader>wr`

### Which-key Settings
Open Which-key Settings  | `<leader>ws`
Reset Which-key Mappings | `<leader>wr`

### Help and Documentation
Open Which-key Documentation | `<leader>wd`
